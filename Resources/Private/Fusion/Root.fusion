prototype(Wwwision.Renderlets.Provider:ConvertUrisRecursively) {
    @class = 'Wwwision\\Renderlets\\Provider\\Fusion\\ConvertUrisRecursivelyImplementation'
    value = ${value}
    node = ${node}
}

prototype(Wwwision.Renderlets.Provider:ReplaceJsonCacheMarker) {
  @class = 'Wwwision\\Renderlets\\Provider\\Fusion\\ReplaceJsonCacheMarkerImplementation'
  value = ${value}
}

prototype(Wwwision.Renderlets.Provider:Renderlet) {
    @class = 'Wwwision\\Renderlets\\Provider\\Fusion\\RenderletImplementation'
    cacheId = ${String.sha1(Math.random())}
    # array of parameters (key = parameter name, value = true/false for required/optional)
    parameters = Neos.Fusion:DataStructure
    renderer = ''
    httpHeaders = Neos.Fusion:DataStructure {
        'Content-Type' = 'text/html'
        'Access-Control-Allow-Origin' = '*'
    }

    @process.convertUris = Neos.Neos:ConvertUris {
        absolute = true
        forceConversion = true
    }
    @cache {
        mode = 'cached'
        entryIdentifier {
            node = ${node}
            parameters = ${String.sha1(Json.stringify(parameters))}
        }
        entryTags {
            renderlet = 'Renderlet'
        }
    }
}

prototype(Wwwision.Renderlets.Provider:RenderletProps) < prototype(Neos.Fusion:Component) {
    cacheId = ${String.sha1(Math.random())}
    parameters = Neos.Fusion:DataStructure
    properties = Neos.Fusion:DataStructure
    httpHeaders = Neos.Fusion:DataStructure {
        'Content-Type' = 'application/json'
        'Access-Control-Allow-Origin' = '*'
    }
    renderer.@context.properties = ${props.properties}
    renderer = Wwwision.Renderlets.Provider:Renderlet {
        cacheId = ${props.cacheId}
        parameters = ${props.parameters}
        httpHeaders = ${props.httpHeaders}
        renderer = Neos.Fusion:DataStructure {
            @apply.props = ${properties}
            @process.convertUris = Wwwision.Renderlets.Provider:ConvertUrisRecursively
            @process.toJson = ${Json.stringify(value)}
            @process.replaceCacheMarker = Wwwision.Renderlets.Provider:ReplaceJsonCacheMarker
        }
        @process.convertUris >
    }
}

# Entry points for renderlets. Every item corresponds to the renderlet it and ought to be an instance of Wwwision.Renderlets.Provider:Renderlet or Wwwision.Renderlets.Provider:RenderletProps:
# renderlets {
#   some_renderlet = Wwwision.Renderlets.Provider:Renderlet {
#     parameters {
#       someRequiredParameter = true
#       someOptionalParameter = false
#     }
#     renderer = Some.Package:SomeComponent {
#       someProp = ${parameters.someRequiredParameter}
#       someOtherProp = ${parameters.someOptionalParameter || 'someDefaultValue'}
#     }
#   }
# }
renderlets = Neos.Fusion:DataStructure
